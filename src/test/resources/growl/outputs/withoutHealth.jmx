<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
    </TestPlan>
    <hashTree>
      <com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup guiclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroupGui" testclass="com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup" testname="bzm - Concurrency Thread Group">
        <elementProp name="ThreadGroup.main_controller" elementType="com.blazemeter.jmeter.control.VirtualUserController"/>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="TargetLevel">${__tstFeedback(GET_presentation-tier_v1policiestestid_0,20,200,4)}</stringProp>
        <stringProp name="RampUp"></stringProp>
        <stringProp name="Steps"></stringProp>
        <stringProp name="Hold">35</stringProp>
        <stringProp name="LogFilename"></stringProp>
        <stringProp name="Iterations"></stringProp>
        <stringProp name="Unit">M</stringProp>
      </com.blazemeter.jmeter.threads.concurrency.ConcurrencyThreadGroup>
      <hashTree>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="GET_presentation-tier_v1policiestestid_0">
          <collectionProp name="load_profile">
            <collectionProp name="1">
              <stringProp name="1">1</stringProp>
              <stringProp name="2">41</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="2">
              <stringProp name="1">41</stringProp>
              <stringProp name="2">41</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="3">
              <stringProp name="1">41</stringProp>
              <stringProp name="2">81</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="4">
              <stringProp name="1">81</stringProp>
              <stringProp name="2">81</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="5">
              <stringProp name="1">81</stringProp>
              <stringProp name="2">121</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="6">
              <stringProp name="1">121</stringProp>
              <stringProp name="2">121</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="7">
              <stringProp name="1">121</stringProp>
              <stringProp name="2">161</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="8">
              <stringProp name="1">161</stringProp>
              <stringProp name="2">161</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="9">
              <stringProp name="1">161</stringProp>
              <stringProp name="2">201</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="10">
              <stringProp name="1">201</stringProp>
              <stringProp name="2">201</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="11">
              <stringProp name="1">201</stringProp>
              <stringProp name="2">241</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="12">
              <stringProp name="1">241</stringProp>
              <stringProp name="2">241</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="13">
              <stringProp name="1">241</stringProp>
              <stringProp name="2">281</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="14">
              <stringProp name="1">281</stringProp>
              <stringProp name="2">281</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="15">
              <stringProp name="1">281</stringProp>
              <stringProp name="2">321</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="16">
              <stringProp name="1">321</stringProp>
              <stringProp name="2">321</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="17">
              <stringProp name="1">321</stringProp>
              <stringProp name="2">361</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="18">
              <stringProp name="1">361</stringProp>
              <stringProp name="2">361</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="19">
              <stringProp name="1">361</stringProp>
              <stringProp name="2">401</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
            <collectionProp name="20">
              <stringProp name="1">401</stringProp>
              <stringProp name="2">401</stringProp>
              <stringProp name="54">3</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET presentation-tier/v1/policies/testid" enabled="true">
          <stringProp name="HTTPSampler.domain">presentation-tier</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.path">/v1/policies/testid</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;someProperty&quot;: true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">GET_presentation-tier_v1policiestestid_0.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp elementType="LoopController" guiclass="LoopControlPanel" name="ThreadGroup.main_controller" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="jp@gc - Dummy Sampler">
          <boolProp name="WAITING">true</boolProp>
          <boolProp name="SUCCESFULL">true</boolProp>
          <stringProp name="RESPONSE_CODE">200</stringProp>
          <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
          <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses without actual network activity. This helps debugging tests.</stringProp>
          <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses without actual network activity. This helps debugging tests.</stringProp>
          <stringProp name="RESPONSE_TIME">${__Random(50,500)}</stringProp>
          <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
          <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
          <stringProp name="URL"/>
          <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
        </kg.apc.jmeter.samplers.DummySampler>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">finished.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
